# This is the name of your workflow. It will show up in the "Actions" tab.
name: Java CI Build & Test

# This controls *when* the workflow runs.
on:
  # Run it on every 'push' to the 'main' branch.
  push:
    branches: [ main ]
  # Also run it on any 'pull request' that targets the 'main' branch.
  pull_request:
    branches: [ main ]

# This defines the "jobs" that will run.
jobs:
  # We have one job, which we'll call "build".
  build:
    # This job will run on a virtual machine provided by GitHub.
    # 'ubuntu-latest' is a standard, clean Linux environment.
    runs-on: ubuntu-latest

    # These are the individual steps the job will take.
    steps:
      # Step 1: Check out your code
      # This downloads your repository's code onto the virtual machine.
      - name: Check out code
        uses: actions/checkout@v4

      # Step 2: Set up the Java environment
      # This installs Java (JDK) 17 (which we set in your pom.xml).
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          # This caches Maven dependencies to speed up future builds
          cache: 'maven'

      # Step 3: Build, Test, and Package with Maven
      # This is the key! It runs the 'mvn package' command.
      # Maven automatically compiles your code, runs your tests, 
      # and packages it into a .jar file.
      # The '-B' means "Batch Mode," which is better for non-interactive scripts.
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Step 4 (Optional, but highly recommended): Upload the .jar file
      # This saves the .jar file that Maven just built as an "artifact"
      # so you can download it from the GitHub Actions page.
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # This is the name of the artifact on GitHub.
          name: jukebox-jar
          # This is the path to the file(s) to upload.
          # Maven puts the .jar file in the 'target' directory.
          # The '*' is a wildcard, so it finds any .jar file in that folder.
          path: target/*.jar
